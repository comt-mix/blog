{"version":3,"file":"component---src-pages-index-tsx.js","mappings":";;;;;;;;;;;;;;;;AAAuC;;AAEvC,igIAAigI;;AAEjgI,iCAAiC,4DAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;;;;;;;;;;;ACdwB;AAC3B;AACkB;AACe;AACmB;AAC9B;AACmD;;AAExG,+BAA+B,8DAAW;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gRAAgR,uCAAuC;AACvT;;AAEA;AACA;AACA;AACA;AACA,EAAE,8DAAc;AAChB,cAAc,sHAAwC;AACtD,WAAW,4DAAY;AACvB,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,gDAAmB,qBAAqB;AAChE;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA,MAAM;AACN,UAAU,KAAqC;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB,YAAY,KAAqC;AACjD;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN,iBAAiB,iDAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,6CAAgB,CAAC,6CAAY;AACzD;;AAEA;AACA,oBAAoB,mEAAmB;AACvC,QAAQ;AACR;AACA;;AAEA,uBAAuB,mEAAe;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,gDAAmB,CAAC,2CAAc,qBAAqB,gDAAmB;AACpG;AACA;AACA;AACA,OAAO,gBAAgB,gDAAmB;AAC1C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAoB;AACj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mDAAAA,CAAC6B,oEAAY;IAACC,YAAY,EAAE5J;EAAgB,EAAG,EAC/C8H,mDAAAA,CAACmB,oEAAY;IACXC,gBAAgB,EAAEA,gBAAiB;IACnCC,YAAY,EAAEA;EAAa,EAC3B,EACFrB,mDAAAA,CAAC8C,gEAAQ;IAACC,eAAe,EAAE3B,gBAAiB;IAAC4B,KAAK,EAAEgC;EAAM,EAAG,CACpD;AAEf,CAAC;AAED,iEAAeR,SAAS,EAAC;AAElB,MAAMgB,WAAW,eAuCvB;;;;;;;;;;;;;;AC9ID,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzFO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACjCmD;AACT;AACH;;AAEvC;;AAEA;AACA,6FAA6F,2CAA2C;;AAExgEAAe;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,0DAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEO;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,0DAAY;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,2CAA2C,IAAI;AAC3G;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA,qBAAqB,YAAY;;AAEjC;AACA;AACA;AACA;AACA,mFAAmF,0BAA0B;AAC7G;;AAEA,WAAW,IAAI,EAAE,YAAY,EAAE,KAAK;AACpC;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,QAAQ,gCAAgC;;AAExC;AACA;AACA,SAAS,uDAAW;AACpB;AACA,EAAE;AACF;;AAEO;AACP;;AAEA;AACA;;;;;;;;;;;;;;;;ACzgByC;;AAEzC,iEAAe,qCAAW,EAAC;;;;;;;;;;;;;;;ACFZ;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://gatsby-starter-comt/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://gatsby-starter-comt/./node_modules/@emotion/styled/base/dist/emotion-styled-base.esm.js","webpack://gatsby-starter-comt/./node_modules/camelcase/index.js","webpack://gatsby-starter-comt/../src/image-utils.ts","webpack://gatsby-starter-comt/../src/components/hooks.ts","webpack://gatsby-starter-comt/../src/components/placeholder.tsx","webpack://gatsby-starter-comt/../src/components/picture.tsx","webpack://gatsby-starter-comt/../src/components/main-image.tsx","webpack://gatsby-starter-comt/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-comt/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-comt/../src/components/static-image.server.tsx","webpack://gatsby-starter-comt/./src/components/Common/Footer.tsx","webpack://gatsby-starter-comt/./src/components/Common/GlobalStyle.tsx","webpack://gatsby-starter-comt/./src/components/Common/Template.tsx","webpack://gatsby-starter-comt/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-comt/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-comt/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-comt/./src/components/Main/PostList.tsx","webpack://gatsby-starter-comt/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-comt/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-comt/./src/pages/index.tsx","webpack://gatsby-starter-comt/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-comt/./node_modules/filter-obj/index.js","webpack://gatsby-starter-comt/./node_modules/query-string/base.js","webpack://gatsby-starter-comt/./node_modules/query-string/index.js","webpack://gatsby-starter-comt/./node_modules/split-on-first/index.js"],"sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport { isPropValid as default };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar isBrowser = typeof document !== 'undefined';\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  if (!isBrowser && rules !== undefined) {\n    var _ref2;\n\n    var serializedNames = serialized.name;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      next = next.next;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref2 = {}, _ref2[\"data-emotion\"] = cache.key + \" \" + serializedNames, _ref2.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref2.nonce = cache.sheet.nonce, _ref2));\n  }\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = React.useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/React.createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport { createStyled as default };\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\nconst FooterWrapper = styled.footer`\n  display: grid;\n  place-items: center;\n  margin-top: auto;\n  padding: 50px 0;\n  font-size: 15px;\n  text-align: center;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst Footer: FunctionComponent = function () {\n  return (\n    <FooterWrapper>\n      Thank You for Visiting My Blog, Have a Good Day 😆\n      <br />© 2024 Developer Comt, Powered By Gatsby.\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import React, { FunctionComponent } from 'react';\nimport { Global, css } from '@emotion/react';\n\nconst defaultStyle = css`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: 'Nanum Myeongjo', serif;\n  }\n\n  html,\n  body,\n  #___gatsby {\n    height: 100%;\n  }\n\n  a,\n  a:hover {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst GlobalStyle: FunctionComponent = function () {\n  return <Global styles={defaultStyle} />;\n};\n\nexport default GlobalStyle;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styled from '@emotion/styled';\nimport GlobalStyle from 'components/Common/GlobalStyle';\nimport Footer from 'components/Common/Footer';\nimport { Helmet } from 'react-helmet';\n\ntype TemplateProps = {\n  title: string;\n  description: string;\n  url: string;\n  image: string;\n  children: ReactNode;\n};\n\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Template: FunctionComponent<TemplateProps> = function ({\n  title,\n  description,\n  url,\n  image,\n  children,\n}) {\n  return (\n    <Container>\n      <Helmet>\n        <title>{title}</title>\n\n        <meta name=\"description\" content={description} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:site_name\" content={title} />\n\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:site\" content=\"comt\" />\n        <meta name=\"twitter:creator\" content=\"comt\" />\n\n        <html lang=\"ko\" />\n      </Helmet>\n\n      <GlobalStyle />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Template;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\ntype CategoryItemProps = {\n  active: boolean;\n};\n\ntype GatsbyLinkProps = {\n  children: ReactNode;\n  className?: string;\n  to: string;\n} & CategoryItemProps;\n\nexport type CategoryListProps = {\n  selectedCategory: string;\n  categoryList: {\n    // 프로퍼티 이름은 문자열, 프로퍼티 값은 숫자임을 나타내는 타입 표기 방법\n    [key: string]: number;\n  };\n};\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 768px;\n  margin: 100px auto 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          #{name}({count})\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  );\n};\n\nexport default CategoryList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport ProfileImage from 'components/Main/ProfileImage';\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst Background = styled.div`\n  width: 100%;\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n  color: #ffffff;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 768px;\n  height: 400px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n    padding: 0 20px;\n  }\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 35px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\n  profileImage,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <ProfileImage profileImage={profileImage} />\n\n        <div>\n          <Title>Frontend Developer Comt</Title>\n        </div>\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default Introduction;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype PostItemProps = PostFrontmatterType & { link: string };\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`;\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`;\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`;\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`;\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  );\n};\n\nexport default PostItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from 'components/Main/PostItem';\nimport { PostListItemType } from 'types/PostItem.types';\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll';\n\ntype PostListProps = {\n  seletedCategory: string;\n  posts: PostListItemType[];\n};\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 768px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 50px 20px;\n  }\n`;\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  seletedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    seletedCategory,\n    posts,\n  );\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData, GatsbyImage } from 'gatsby-plugin-image';\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\n  profileImage,\n}) {\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />;\n};\n\nexport default ProfileImage;\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react';\nimport { PostListItemType } from 'types/PostItem.types';\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>;\n  postList: PostListItemType[];\n};\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null);\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null);\n  const [count, setCount] = useState<number>(1);\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  );\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return;\n\n      setCount(value => value + 1);\n      observer.unobserve(entries[0].target);\n    });\n  }, []);\n\n  useEffect(() => setCount(1), [selectedCategory]);\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return;\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    );\n  }, [count, selectedCategory]);\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  };\n};\n\nexport default useInfiniteScroll;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport Template from 'components/Common/Template';\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList';\nimport Introduction from 'components/Main/Introduction';\nimport PostList from 'components/Main/PostList';\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { PostListItemType } from 'types/PostItem.types';\nimport queryString, { ParsedQuery } from 'query-string';\n\ntype IndexPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list['All']++;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  );\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList seletedCategory={selectedCategory} posts={edges} />\n    </Template>\n  );\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tqueryString &&= `?${queryString}`;\n\n\tlet hash = getHash(object.url);\n\tif (typeof object.fragmentIdentifier === 'string') {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","DEFAULT_FLUID_WIDTH","DEFAULT_FIXED_WIDTH","DEFAULT_ASPECT_RATIO","warn","message","sortNumeric","a","b","getSizes","width","layout","getSrcSet","images","map","image","src","join","formatFromFilename","filename","lastIndexOf","dot","ext","slice","length","setDefaultDimensions","args","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","_extends","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","_sourceMetadata","pluginName","reporter","_args2$reporter","backgroundColor","placeholderURL","Error","Set","size","has","delete","add","imageSizes","imgDimensions","_args$reporter","_args$breakpoints","erroneousUserDimensions","Object","entries","filter","_","_ref","dim","_ref2","_ref2$fit","outputPixelDensities","_ref2$reporter","densities","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","_ref3","_ref3$fit","_ref3$outputPixelDens","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","_widthOption","max","N","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2$images","_getImage2","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","_breakpoints","withArtDirection","defaultImage","artDirected","_output$placeholder","_output$placeholder$s","output","_excluded2","media","process","env","NODE_ENV","console","source","concat","apply","_Picture$propTypes","loading","alt","shouldLoad","React","decoding","undefined","Picture","_ref2$shouldLoad","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","createElement","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","G","V","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","_getWrapperProps","wClass","wrapperProps","cleanedImages","getPlaceholderProps","isLoaded","top","left","bottom","right","opacity","transition","isLoading","transform","willChange","getMainProps","_excluded","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","FooterWrapper","target","label","name","styles","toString","Footer","___EmotionJSX","Global","defaultStyle","GlobalStyle","Helmet","Container","Template","title","description","url","content","httpEquiv","property","lang","Link","CategoryListWrapper","CategoryItem","_styled","active","CategoryList","selectedCategory","categoryList","count","to","ProfileImage","Background","Wrapper","SubTitle","Title","Introduction","profileImage","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","PostItem","date","categories","summary","thumbnail","link","category","useInfiniteScroll","PostListWrapper","PostList","seletedCategory","posts","containerRef","postList","ref","id","fields","slug","frontmatter","ProfileImageWrapper","useState","useEffect","useRef","useMemo","NUMBER_OF_ITEMS_PER_PAGE","observer","setCount","postListByCategory","current","IntersectionObserver","isIntersecting","value","unobserve","observe","queryString","IndexPage","location","search","data","site","siteMetadata","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","parse","reduce","list","All","getPostList"],"sourceRoot":""}