{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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A;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;ACzFe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACnBO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;ACjCmD;AACT;AACH;;AAEvC;;AAEA;AACA,6FAA6F,2CAA2C;;AAExI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qEAAqE,WAAM;AAC3E,6BAA6B,WAAM;AACnC,uGAAuG,WAAM,6CAA6C,WAAM;AAChK;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,WAAM;AACtC;AACA;;AAEA;AACA;AACA,6DAA6D,WAAM;;AAEnE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,WAAM;AACf;AACA,SAAS,kBAAe;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,YAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA,4HAA4H,WAAM;AAClI,YAAY,WAAM;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEO;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,YAAY;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,oBAAoB,WAAM,iBAAiB,IAAI;AAC3G;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA,qBAAqB,YAAY;;AAEjC;AACA;AACA;AACA;AACA,mFAAmF,0BAA0B;AAC7G;;AAEA,WAAW,IAAI,EAAE,YAAY,EAAE,KAAK;AACpC;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,QAAQ,gCAAgC;;AAExC;AACA;AACA,SAAS,WAAW;AACpB;AACA,EAAE;AACF;;AAEO;AACP;;AAEA;AACA;;;ACzgByC;;AAEzC,mDAAe,oBAAW,EAAC;;;;;;;ACF+B;AAER;AAC6B;AACvB;AACR;AAIQ;AAAA;AA0BxD,MAAM9E,SAAS;EAAAwE;AAAA;EAAAjE;EAAAX;AAAA,MAId;AAED,MAAM2F,SAA4C,GAAG,UAAU;EAC7DC,QAAQ,EAAE;IAAEC;EAAO,CAAC;EACpBC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,YAAY,EAAE;QAAE1F,KAAK;QAAEC,WAAW;QAAE0F;MAAQ;IAC9C,CAAC;IACDC,iBAAiB,EAAE;MAAEC;IAAM,CAAC;IAC5BC,IAAI,EAAE;MACJhD,eAAe,EAAE;QAAEC;MAAgB,CAAC;MACpCgD;IACF;EACF;AACF,CAAC,EAAE;EACD,MAAMC,MAA2B,GAAGd,YAAW,CAACe,KAAK,CAACV,MAAM,CAAC;EAC7D,MAAMtE,gBAAwB,GAC5B,OAAO+E,MAAM,CAAC/C,QAAQ,KAAK,QAAQ,IAAI,CAAC+C,MAAM,CAAC/C,QAAQ,GACnD,KAAK,GACL+C,MAAM,CAAC/C,QAAQ;EAErB,MAAM/B,YAAY,GAAGmC,qBAAO,CAC1B,MACEwC,KAAK,CAACK,MAAM,CACV,CACEC,IAAuC,EACvC;IACErC,IAAI,EAAE;MACJC,WAAW,EAAE;QAAEpB;MAAW;IAC5B;EACgB,CAAC,KAChB;IACHA,UAAU,CAACyD,OAAO,CAACnD,QAAQ,IAAI;MAC7B,IAAIkD,IAAI,CAAClD,QAAQ,CAAC,KAAKoD,SAAS,EAAEF,IAAI,CAAClD,QAAQ,CAAC,GAAG,CAAC,CAAC,KAChDkD,IAAI,CAAClD,QAAQ,CAAC,EAAE;IACvB,CAAC,CAAC;IAEFkD,IAAI,CAAC,KAAK,CAAC,EAAE;IAEb,OAAOA,IAAI;EACb,CAAC,EACD;IAAEG,GAAG,EAAE;EAAE,CAAC,CACX,EACH,EAAE,CACH;EACD,OACE7G,iCAAAA,CAACM,uBAAQ;IACPC,KAAK,EAAEA,KAAM;IACbC,WAAW,EAAEA,WAAY;IACzBC,GAAG,EAAEyF,OAAQ;IACbxF,KAAK,EAAE4F;EAAU,GAEjBtG,iCAAAA,CAACyC,iBAAY;IAACN,YAAY,EAAEmB;EAAgB,EAAG,EAC/CtD,iCAAAA,CAACuB,iBAAY;IACXC,gBAAgB,EAAEA,gBAAiB;IACnCC,YAAY,EAAEA;EAAa,EAC3B,EACFzB,iCAAAA,CAACmF,aAAQ;IAACC,eAAe,EAAE5D,gBAAiB;IAACuC,KAAK,EAAEqC;EAAM,EAAG,CACpD;AAEf,CAAC;AAED,4CAAeR,SAAS,EAAC;AAElB,MAAMkB,WAAW,eAuCvB","sources":["webpack://gatsby-starter-comt/./src/components/Common/GlobalStyle.tsx","webpack://gatsby-starter-comt/./src/components/Common/Footer.tsx","webpack://gatsby-starter-comt/./src/components/Common/Template.tsx","webpack://gatsby-starter-comt/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-comt/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-comt/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-comt/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-comt/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-comt/./src/components/Main/PostList.tsx","webpack://gatsby-starter-comt/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-comt/./node_modules/split-on-first/index.js","webpack://gatsby-starter-comt/./node_modules/filter-obj/index.js","webpack://gatsby-starter-comt/./node_modules/query-string/base.js","webpack://gatsby-starter-comt/./node_modules/query-string/index.js","webpack://gatsby-starter-comt/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Global, css } from '@emotion/react';\n\nconst defaultStyle = css`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: 'Nanum Myeongjo', serif;\n  }\n\n  html,\n  body,\n  #___gatsby {\n    height: 100%;\n  }\n\n  a,\n  a:hover {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst GlobalStyle: FunctionComponent = function () {\n  return <Global styles={defaultStyle} />;\n};\n\nexport default GlobalStyle;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\nconst FooterWrapper = styled.footer`\n  display: grid;\n  place-items: center;\n  margin-top: auto;\n  padding: 50px 0;\n  font-size: 15px;\n  text-align: center;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst Footer: FunctionComponent = function () {\n  return (\n    <FooterWrapper>\n      Thank You for Visiting My Blog, Have a Good Day 😆\n      <br />© 2024 Developer Comt, Powered By Gatsby.\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styled from '@emotion/styled';\nimport GlobalStyle from 'components/Common/GlobalStyle';\nimport Footer from 'components/Common/Footer';\nimport { Helmet } from 'react-helmet';\n\ntype TemplateProps = {\n  title: string;\n  description: string;\n  url: string;\n  image: string;\n  children: ReactNode;\n};\n\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Template: FunctionComponent<TemplateProps> = function ({\n  title,\n  description,\n  url,\n  image,\n  children,\n}) {\n  return (\n    <Container>\n      <Helmet>\n        <title>{title}</title>\n\n        <meta name=\"description\" content={description} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:site_name\" content={title} />\n\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:site\" content=\"comt\" />\n        <meta name=\"twitter:creator\" content=\"comt\" />\n\n        <html lang=\"ko\" />\n      </Helmet>\n\n      <GlobalStyle />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Template;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\ntype CategoryItemProps = {\n  active: boolean;\n};\n\ntype GatsbyLinkProps = {\n  children: ReactNode;\n  className?: string;\n  to: string;\n} & CategoryItemProps;\n\nexport type CategoryListProps = {\n  selectedCategory: string;\n  categoryList: {\n    // 프로퍼티 이름은 문자열, 프로퍼티 값은 숫자임을 나타내는 타입 표기 방법\n    [key: string]: number;\n  };\n};\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 768px;\n  margin: 100px auto 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          #{name}({count})\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  );\n};\n\nexport default CategoryList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData, GatsbyImage } from 'gatsby-plugin-image';\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\n  profileImage,\n}) {\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />;\n};\n\nexport default ProfileImage;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport ProfileImage from 'components/Main/ProfileImage';\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst Background = styled.div`\n  width: 100%;\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n  color: #ffffff;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 768px;\n  height: 400px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n    padding: 0 20px;\n  }\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 35px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\n  profileImage,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <ProfileImage profileImage={profileImage} />\n\n        <div>\n          <Title>Frontend Developer Comt</Title>\n        </div>\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default Introduction;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype PostItemProps = PostFrontmatterType & { link: string };\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`;\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`;\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`;\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`;\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  );\n};\n\nexport default PostItem;\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react';\nimport { PostListItemType } from 'types/PostItem.types';\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>;\n  postList: PostListItemType[];\n};\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null);\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null);\n  const [count, setCount] = useState<number>(1);\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  );\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return;\n\n      setCount(value => value + 1);\n      observer.unobserve(entries[0].target);\n    });\n  }, []);\n\n  useEffect(() => setCount(1), [selectedCategory]);\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return;\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    );\n  }, [count, selectedCategory]);\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  };\n};\n\nexport default useInfiniteScroll;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from 'components/Main/PostItem';\nimport { PostListItemType } from 'types/PostItem.types';\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll';\n\ntype PostListProps = {\n  seletedCategory: string;\n  posts: PostListItemType[];\n};\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 768px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 50px 20px;\n  }\n`;\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  seletedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    seletedCategory,\n    posts,\n  );\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tqueryString &&= `?${queryString}`;\n\n\tlet hash = getHash(object.url);\n\tif (typeof object.fragmentIdentifier === 'string') {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport Template from 'components/Common/Template';\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList';\nimport Introduction from 'components/Main/Introduction';\nimport PostList from 'components/Main/PostList';\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { PostListItemType } from 'types/PostItem.types';\nimport queryString, { ParsedQuery } from 'query-string';\n\ntype IndexPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list['All']++;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  );\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList seletedCategory={selectedCategory} posts={edges} />\n    </Template>\n  );\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["Global","defaultStyle","GlobalStyle","___EmotionJSX","styles","FooterWrapper","Footer","Helmet","Container","Template","title","description","url","image","children","name","content","httpEquiv","property","lang","Link","CategoryListWrapper","CategoryItem","_styled","active","props","CategoryList","selectedCategory","categoryList","Object","entries","map","count","to","key","GatsbyImage","ProfileImageWrapper","ProfileImage","profileImage","alt","Background","Wrapper","SubTitle","Title","Introduction","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","PostItem","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","category","useState","useEffect","useRef","useMemo","NUMBER_OF_ITEMS_PER_PAGE","useInfiniteScroll","posts","containerRef","observer","setCount","postListByCategory","filter","node","frontmatter","includes","current","IntersectionObserver","isIntersecting","value","unobserve","target","length","observe","postList","slice","PostListWrapper","PostList","seletedCategory","ref","id","fields","slug","queryString","label","toString","IndexPage","location","search","data","site","siteMetadata","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","parse","reduce","list","forEach","undefined","All","getPostList"],"sourceRoot":""}