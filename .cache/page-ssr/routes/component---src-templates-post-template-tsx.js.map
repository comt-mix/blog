{"version":3,"file":"component---src-templates-post-template-tsx.js","mappings":";;;;;;;;;;;;qRAGA,KAAMC,aAAY,iNAoBjB,CAED,KAAMC,YAA8B,CAAG,UAAY,CACjD,MAAOC,CAAAA,6DAAAA,CAACH,4DAAM,EAACI,MAAM,CAAEH,YAAa,EAAG,CACzC,CAAC,CAED,iEAAeC,WAAW;;;;;;;;;;;;;;;;;;;;qRC1B1B,KAAMG,cAAa,2RAYlB,CAED,KAAMC,OAAyB,CAAG,UAAY,CAC5C,MACEH,CAAAA,iCAAAA,CAACE,aAAa,MAAC,8DAEb,6CAAM,+CACR,CAAgB,CAEpB,CAAC,CAED,oDAAeC,MAAM;;;;4RCZrB,KAAME,UAAS,+KAId,CAED,KAAMC,SAA0C,CAAG,SAAU,CAC3DC,KAAK,CACLC,WAAW,CACXC,GAAG,CACHC,KAAK,CACLC,QACF,CAAC,CAAE,CACD,MACEX,CAAAA,iCAAAA,CAACK,SAAS,MACRL,iCAAAA,CAACI,aAAM,MACLJ,iCAAAA,cAAQO,KAAK,CAAS,CAEtBP,iCAAAA,SAAMY,IAAI,CAAC,aAAa,CAACC,OAAO,CAAEL,WAAY,EAAG,CACjDR,iCAAAA,SAAMY,IAAI,CAAC,UAAU,CAACC,OAAO,CAAC,uCAAuC,EAAG,CACxEb,iCAAAA,SAAMc,SAAS,CAAC,cAAc,CAACD,OAAO,CAAC,yBAAyB,EAAG,CAEnEb,iCAAAA,SAAMe,QAAQ,CAAC,SAAS,CAACF,OAAO,CAAC,SAAS,EAAG,CAC7Cb,iCAAAA,SAAMe,QAAQ,CAAC,UAAU,CAACF,OAAO,CAAEN,KAAM,EAAG,CAC5CP,iCAAAA,SAAMe,QAAQ,CAAC,gBAAgB,CAACF,OAAO,CAAEL,WAAY,EAAG,CACxDR,iCAAAA,SAAMe,QAAQ,CAAC,UAAU,CAACF,OAAO,CAAEH,KAAM,EAAG,CAC5CV,iCAAAA,SAAMe,QAAQ,CAAC,QAAQ,CAACF,OAAO,CAAEJ,GAAI,EAAG,CACxCT,iCAAAA,SAAMe,QAAQ,CAAC,cAAc,CAACF,OAAO,CAAEN,KAAM,EAAG,CAEhDP,iCAAAA,SAAMY,IAAI,CAAC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAG,CAC9Cb,iCAAAA,SAAMY,IAAI,CAAC,eAAe,CAACC,OAAO,CAAEN,KAAM,EAAG,CAC7CP,iCAAAA,SAAMY,IAAI,CAAC,qBAAqB,CAACC,OAAO,CAAEL,WAAY,EAAG,CACzDR,iCAAAA,SAAMY,IAAI,CAAC,eAAe,CAACC,OAAO,CAAEH,KAAM,EAAG,CAC7CV,iCAAAA,SAAMY,IAAI,CAAC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAG,CAC3Cb,iCAAAA,SAAMY,IAAI,CAAC,iBAAiB,CAACC,OAAO,CAAC,MAAM,EAAG,CAE9Cb,iCAAAA,SAAMgB,IAAI,CAAC,IAAI,EAAG,CACX,CAEThB,iCAAAA,CAACD,0BAAW,MAAG,CACdY,QAAQ,CACTX,iCAAAA,CAACG,aAAM,MAAG,CACA,CAEhB,CAAC,CAED,sDAAeG,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qRCjDvB,KAAMa,oBAAmB,6RAaxB,CAED,KAAMC,aAAY,+WAiBjB,CAED,KAAMC,MAAK,gXAeV,CAED,KAAMC,SAAQ,mVAcb,CAED,KAAMC,aAAkD,CAAG,SAAU,CACnEhB,KAAK,CACLiB,IAAI,CACJC,UACF,CAAC,CAAE,CACD,KAAMC,WAAU,CAAG,IAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,EAAE,CAE9C,MACE7B,CAAAA,iCAAAA,CAACmB,mBAAmB,MAClBnB,iCAAAA,CAACoB,YAAY,EAACU,OAAO,CAAEJ,UAAW,EAChC1B,iCAAAA,CAACiB,+BAAe,EAACc,IAAI,CAAEb,yCAAY,EAAG,CACzB,CACflB,iCAAAA,CAACqB,KAAK,MAAEd,KAAK,CAAS,CACtBP,iCAAAA,CAACsB,QAAQ,MACPtB,iCAAAA,YAAMyB,UAAU,CAACO,IAAI,CAAC,KAAK,CAAC,CAAO,CACnChC,iCAAAA,YAAMwB,IAAI,CAAO,CACR,CACS,CAE1B,CAAC,CAED,wDAAeD,YAAY;;4RCpF3B,KAAMW,gBAAe,iNAQpB,CAED,KAAMC,gBAAe,cAAGC,0CAAAA,CAAQC,KAAqB,EACnDrC,iCAAAA,CAACiC,uCAAW,mCAAKI,KAAK,EAAEC,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAW,CAAE,GACzD,6BAAC,wJAUD,CAED,KAAMC,SAA0C,CAAG,SAAU,CAC3DjC,KAAK,CACLiB,IAAI,CACJC,UAAU,CACVgB,SACF,CAAC,CAAE,CACD,MACEzC,CAAAA,iCAAAA,CAACkC,eAAe,MACdlC,iCAAAA,CAACmC,eAAe,EAACzB,KAAK,CAAE+B,SAAU,CAACC,GAAG,CAAC,WAAW,EAAG,CACrD1C,iCAAAA,CAACuB,iBAAY,EAAChB,KAAK,CAAEA,KAAM,CAACiB,IAAI,CAAEA,IAAK,CAACC,UAAU,CAAEA,UAAW,EAAG,CAClD,CAEtB,CAAC,CAED,oDAAee,QAAQ;;+RC9CvB,KAAMG,iBAAgB,iiCA0HrB,CAED,KAAMC,YAAgD,CAAG,SAAU,CAAEC,IAAK,CAAC,CAAE,CAC3E,MAAO7C,CAAAA,iCAAAA,CAAC2C,gBAAgB,EAACG,uBAAuB,CAAE,CAAEC,MAAM,CAAEF,IAAK,CAAE,EAAG,CACxE,CAAC,CAED,uDAAeD,WAAW;;;;iSCpI1B,KAAMM,IAAG,CAAG,+BAA+B,CAC3C,KAAMC,KAAI,CAAG,yBAAyB,CAYtC,KAAMC,kBAAiB,wKAItB,CAED,KAAMC,cAAgC,CAAG,UAAY,CACnD,KAAMC,QAAO,cAAGN,uBAAS,EAAkB,CAE3CC,uBAAS,CAAC,IAAM,CACd,GAAIK,OAAO,CAACC,OAAO,GAAK,IAAI,CAAE,OAE9B,KAAMC,WAA6B,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAEtE,KAAMC,WAAoC,CAAG,CAC3CT,GAAG,CACHC,IAAI,CACJ,YAAY,CAAE,UAAU,CACxBS,KAAK,CAAE,SAAS,CAChBC,KAAK,CAAG,cAAa,CACrBC,WAAW,CAAE,WAAW,CACxBC,KAAK,CAAE,MACT,CAAC,CAEDC,MAAM,CAACC,OAAO,CAACN,UAAU,CAAC,CAACO,OAAO,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,CAAC,GAAK,CACnDZ,UAAU,CAACa,YAAY,CAACF,GAAG,CAAEC,KAAK,CAAC,CACrC,CAAC,CAAC,CAEFd,OAAO,CAACC,OAAO,CAACe,WAAW,CAACd,UAAU,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAOxD,CAAAA,iCAAAA,CAACoD,iBAAiB,EAACmB,GAAG,CAAEjB,OAAQ,EAAG,CAC5C,CAAC,CAED,yDAAeD,aAAa;;AChD6B;AACP;AACF;AACM;AACI;AAAA;AAoB1D,MAAMmB,YAAkD,GAAG,UAAU;EACnEC,IAAI,EAAE;IACJC,iBAAiB,EAAE;MAAEC;IAAM;EAC7B,CAAC;EACDC,QAAQ,EAAE;IAAEC;EAAK;AACnB,CAAC,EAAE;EACD,MAAM;IACJC,IAAI,EAAE;MACJjC,IAAI;MACJkC,WAAW,EAAE;QACXxE,KAAK;QACLyE,OAAO;QACPxD,IAAI;QACJC,UAAU;QACVgB,SAAS,EAAE;UACTwC,eAAe,EAAE;YAAEC;UAAgB,CAAC;UACpCC;QACF;MACF;IACF;EACF,CAAC,GAAGR,KAAK,CAAC,CAAC,CAAC;EAEZ,OACE3E,iCAAAA,CAACM,uBAAQ;IAACC,KAAK,EAAEA,KAAM;IAACC,WAAW,EAAEwE,OAAQ;IAACvE,GAAG,EAAEoE,IAAK;IAACnE,KAAK,EAAEyE;EAAU,GACxEnF,iCAAAA,CAACwC,aAAQ;IACPjC,KAAK,EAAEA,KAAM;IACbiB,IAAI,EAAEA,IAAK;IACXC,UAAU,EAAEA,UAAW;IACvBgB,SAAS,EAAEyC;EAAgB,EAC3B,EACFlF,iCAAAA,CAAC4C,gBAAW;IAACC,IAAI,EAAEA;EAAK,EAAG,EAC3B7C,iCAAAA,CAACqD,kBAAa,OAAG,CACR;AAEf,CAAC;AACD,oDAAemB,YAAY,EAAC;AAErB,MAAMY,uBAAuB,eAsBnC","sources":["webpack://gatsby-starter-comt/./src/components/Common/GlobalStyle.tsx","webpack://gatsby-starter-comt/./src/components/Common/Footer.tsx","webpack://gatsby-starter-comt/./src/components/Common/Template.tsx","webpack://gatsby-starter-comt/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-comt/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-comt/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-comt/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-comt/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Global, css } from '@emotion/react';\n\nconst defaultStyle = css`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: 'Nanum Myeongjo', serif;\n  }\n\n  html,\n  body,\n  #___gatsby {\n    height: 100%;\n  }\n\n  a,\n  a:hover {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst GlobalStyle: FunctionComponent = function () {\n  return <Global styles={defaultStyle} />;\n};\n\nexport default GlobalStyle;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\nconst FooterWrapper = styled.footer`\n  display: grid;\n  place-items: center;\n  margin-top: auto;\n  padding: 50px 0;\n  font-size: 15px;\n  text-align: center;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst Footer: FunctionComponent = function () {\n  return (\n    <FooterWrapper>\n      Thank You for Visiting My Blog, Have a Good Day 😆\n      <br />© 2024 Developer Comt, Powered By Gatsby.\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styled from '@emotion/styled';\nimport GlobalStyle from 'components/Common/GlobalStyle';\nimport Footer from 'components/Common/Footer';\nimport { Helmet } from 'react-helmet';\n\ntype TemplateProps = {\n  title: string;\n  description: string;\n  url: string;\n  image: string;\n  children: ReactNode;\n};\n\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Template: FunctionComponent<TemplateProps> = function ({\n  title,\n  description,\n  url,\n  image,\n  children,\n}) {\n  return (\n    <Container>\n      <Helmet>\n        <title>{title}</title>\n\n        <meta name=\"description\" content={description} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:site_name\" content={title} />\n\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:site\" content=\"comt\" />\n        <meta name=\"twitter:creator\" content=\"comt\" />\n\n        <html lang=\"ko\" />\n      </Helmet>\n\n      <GlobalStyle />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Template;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nexport type PostHeadInfoProps = {\n  title: string;\n  date: string;\n  categories: string[];\n};\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: #ffffff;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 20px;\n  }\n`;\n\nconst PrevPageIcon = styled.div`\n  display: grid;\n  place-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #ffffff;\n  color: #000000;\n  font-size: 22px;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n  @media (max-width: 768px) {\n    width: 30px;\n    height: 30px;\n    font-size: 18px;\n  }\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 45px;\n  font-weight: 800;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst PostData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 400;\n  }\n`;\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  const goBackPage = () => window.history.back();\n\n  return (\n    <PostHeadInfoWrapper>\n      <PrevPageIcon onClick={goBackPage}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </PrevPageIcon>\n      <Title>{title}</Title>\n      <PostData>\n        <div>{categories.join(' / ')}</div>\n        <div>{date}</div>\n      </PostData>\n    </PostHeadInfoWrapper>\n  );\n};\n\nexport default PostHeadInfo;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo';\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData;\n  alt: string;\n  className?: string;\n};\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData;\n};\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`;\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\n))`\n  z-index: -1;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  filter: brightness(0.25);\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`;\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) {\n  return (\n    <PostHeadWrapper>\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  );\n};\n\nexport default PostHead;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 100px 0;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport default PostContent;\n","import React, { createRef, FunctionComponent, useEffect } from 'react';\nimport styled from '@emotion/styled';\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'comt-mix/comt.github.io';\n\ntype UtterancesAttributesType = {\n  src: string;\n  repo: string;\n  'issue-term': string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`;\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <UtterancesWrapper ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PostPageItemType } from 'types/PostItem.types'; // 바로 아래에서 정의할 것입니다\nimport Template from 'components/Common/Template';\nimport PostHead from 'components/Post/PostHead';\nimport PostContent from 'components/Post/PostContent';\nimport CommentWidget from 'components/Post/CommentWidget';\n\nexport type PostPageItemType = {\n  node: {\n    html: string;\n    frontmatter: PostFrontmatterType;\n  };\n};\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  );\n};\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Global","defaultStyle","GlobalStyle","___EmotionJSX","styles","FooterWrapper","Footer","Helmet","Container","Template","title","description","url","image","children","name","content","httpEquiv","property","lang","FontAwesomeIcon","faArrowLeft","PostHeadInfoWrapper","PrevPageIcon","Title","PostData","PostHeadInfo","date","categories","goBackPage","window","history","back","onClick","icon","join","GatsbyImage","PostHeadWrapper","BackgroundImage","_styled","props","style","position","PostHead","thumbnail","alt","MarkdownRenderer","PostContent","html","dangerouslySetInnerHTML","__html","createRef","useEffect","src","repo","UtterancesWrapper","CommentWidget","element","current","utterances","document","createElement","attributes","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","PostTemplate","data","allMarkdownRemark","edges","location","href","node","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","queryMarkdownDataBySlug"],"sourceRoot":""}