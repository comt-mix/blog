{"version":3,"file":"component---src-pages-index-tsx-baa8302fe526aaacbee0.js","mappings":"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","sources":["webpack:///./src/components/Main/CategoryList.tsx","webpack:///./src/components/Main/ProfileImage.tsx","webpack:///./src/components/Main/Introduction.tsx","webpack:///./src/components/Main/PostItem.tsx","webpack:///./src/hooks/useInfiniteScroll.tsx","webpack:///./src/components/Main/PostList.tsx","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/filter-obj/index.js","webpack:///./node_modules/query-string/base.js","webpack:///./node_modules/query-string/index.js","webpack:///./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\n\ntype CategoryItemProps = {\n  active: boolean;\n};\n\ntype GatsbyLinkProps = {\n  children: ReactNode;\n  className?: string;\n  to: string;\n} & CategoryItemProps;\n\nexport type CategoryListProps = {\n  selectedCategory: string;\n  categoryList: {\n    // 프로퍼티 이름은 문자열, 프로퍼티 값은 숫자임을 나타내는 타입 표기 방법\n    [key: string]: number;\n  };\n};\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 768px;\n  margin: 100px auto 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? \"800\" : \"400\")};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          #{name}({count})\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  );\n};\n\nexport default CategoryList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData, GatsbyImage } from 'gatsby-plugin-image';\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\n  profileImage,\n}) {\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />;\n};\n\nexport default ProfileImage;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport ProfileImage from 'components/Main/ProfileImage';\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData;\n};\n\nconst Background = styled.div`\n  width: 100%;\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n  color: #ffffff;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 768px;\n  height: 400px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n    padding: 0 20px;\n  }\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 35px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\n  profileImage,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <ProfileImage profileImage={profileImage} />\n\n        <div>\n          <Title>Frontend Developer Comt</Title>\n        </div>\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default Introduction;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype PostItemProps = PostFrontmatterType & { link: string };\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`;\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`;\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`;\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`;\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  );\n};\n\nexport default PostItem;\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react';\nimport { PostListItemType } from 'types/PostItem.types';\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>;\n  postList: PostListItemType[];\n};\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null);\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null);\n  const [count, setCount] = useState<number>(1);\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  );\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return;\n\n      setCount(value => value + 1);\n      observer.unobserve(entries[0].target);\n    });\n  }, []);\n\n  useEffect(() => setCount(1), [selectedCategory]);\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return;\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    );\n  }, [count, selectedCategory]);\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  };\n};\n\nexport default useInfiniteScroll;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from 'components/Main/PostItem';\nimport { PostListItemType } from 'types/PostItem.types';\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll';\n\ntype PostListProps = {\n  seletedCategory: string;\n  posts: PostListItemType[];\n};\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 768px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 50px 20px;\n  }\n`;\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  seletedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    seletedCategory,\n    posts,\n  );\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tqueryString &&= `?${queryString}`;\n\n\tlet hash = getHash(object.url);\n\tif (typeof object.fragmentIdentifier === 'string') {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport Template from \"components/Common/Template\";\nimport CategoryList, { CategoryListProps } from \"components/Main/CategoryList\";\nimport Introduction from \"components/Main/Introduction\";\nimport PostList from \"components/Main/PostList\";\nimport { graphql } from \"gatsby\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { PostListItemType } from \"types/PostItem.types\";\nimport queryString, { ParsedQuery } from \"query-string\";\n\ntype IndexPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== \"string\" || !parsed.category\n      ? \"All\"\n      : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps[\"categoryList\"],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType\n        ) => {\n          categories.forEach((category) => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list[\"All\"]++;\n\n          return list;\n        },\n        { All: 0 }\n      ),\n    []\n  );\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList seletedCategory={selectedCategory} posts={edges} />\n    </Template>\n  );\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["CategoryListWrapper","CategoryItem","_styled","_ref","active","props","___EmotionJSX","Link","_ref2","selectedCategory","categoryList","Object","entries","map","_ref4","name","count","to","key","ProfileImageWrapper","GatsbyImage","profileImage","image","alt","Background","Wrapper","Title","ProfileImage","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","category","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","target","length","children","observe","postList","slice","PostListWrapper","seletedCategory","useInfiniteScroll","ref","id","fields","slug","PostItem","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","strictUriEncode","encodeURIComponent","replaceAll","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSeparator","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","list","forEach","All","Template","Introduction","CategoryList","PostList"],"sourceRoot":""}